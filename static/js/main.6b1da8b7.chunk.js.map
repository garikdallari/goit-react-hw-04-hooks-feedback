{"version":3,"sources":["Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","data","Object","keys","map","feedback","type","onClick","Notification","message","App","state","countTotalFeedback","values","reduce","el","countPositiveFeedbackPercentage","Math","round","handleFeedback","e","target","currentTarget","dataset","action","console","log","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAgBeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCeQC,MAnBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCeSC,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GACzB,OACE,8BACGE,EAAKG,KAAI,SAAAC,GAAQ,OAChB,wBAEEC,KAAK,SACL,cAAaD,EACbE,QAASP,EAJX,SAMGK,GALIA,SCAAG,MAPf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCGQC,E,4MACnBC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPiB,mBAAqB,WAEnB,OADcV,OAAOW,OAAO,EAAKF,OACpBG,QAAO,SAAClB,EAAOmB,GAAR,OAAenB,EAAQmB,IAAI,I,EAGjDC,gCAAkC,WAChC,IAAQvB,EAAS,EAAKkB,MAAdlB,KACFG,EAAQ,EAAKgB,qBACnB,OAAOK,KAAKC,MAAOzB,EAAOG,EAAS,M,EAGrCuB,eAAiB,SAACC,GAChB,IAAMC,EAASD,EAAEE,cAAcC,QAAQC,OACvCC,QAAQC,IAAIN,EAAEC,QACd,EAAKM,UAAS,SAACC,GAAD,sBACXP,EAASO,EAAUP,GAAU,O,4CAIlC,WACE,MAA+BQ,KAAKlB,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,CAASL,MAAM,wBAAf,UACE,cAAC,EAAD,CACES,QAAS8B,KAAKlB,MACdX,gBAAiB6B,KAAKV,iBAGxB,gCACE,4CACC1B,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKjB,qBACZf,mBAAoBgC,KAAKb,oCAG3B,cAAC,EAAD,CAAcP,QAAQ,gC,GA7CDqB,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6b1da8b7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}% </p>\n    </>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  const data = Object.keys(options);\n  return (\n    <div>\n      {data.map(feedback => (\n        <button\n          key={feedback}\n          type=\"button\"\n          data-action={feedback}\n          onClick={onLeaveFeedback}\n        >\n          {feedback}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Section from \"./Components/Section/Section\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./Components/Notification/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback = () => {\n    const total = Object.values(this.state);\n    return total.reduce((total, el) => total + el, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return Math.round((good / total) * 100);\n  };\n\n  handleFeedback = (e) => {\n    const target = e.currentTarget.dataset.action;\n    console.log(e.target);\n    this.setState((prevState) => ({\n      [target]: prevState[target] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.handleFeedback}\n        />\n\n        <div>\n          <h2>Statistics</h2>\n          {good > 0 || neutral > 0 || bad > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </div>\n      </Section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}